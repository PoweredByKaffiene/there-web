openapi: 3.0.3
info:
  title: there
  version: 0.0.1
  description: there OpenAPI Documentation
paths:
  /authentication/google-callback:
    get:
      operationId: authentication_google_callback_retrieve
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: authentication_google_callback_create
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/login:
    post:
      operationId: authentication_login_create
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /authentication/logout:
    post:
      operationId: authentication_logout_create
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/me:
    get:
      operationId: authentication_me_retrieve
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/token/refresh:
    post:
      operationId: authentication_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /locations/save:
    post:
      operationId: locations_save_create
      tags:
      - locations
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 3
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        tokens:
          type: string
          readOnly: true
      required:
      - email
      - password
      - tokens
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://localhost:3000/
  description: Localhost API base URL
